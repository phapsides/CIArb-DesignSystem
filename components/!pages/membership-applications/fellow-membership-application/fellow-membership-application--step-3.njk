{% extends '@t-centered' %}

{% block breadcrumbs %}
    {{ bcBreadcrumbs({
		items: [
			{ text: 'Home', href: '/' },
			{ text: 'Membership', href: '#' },
			{ text: 'Fellow membership', href: '#' },
			{ text: 'Fellow membership application', href: '#', current: true }
		]
	}) }}
{% endblock %}

{% block beforeTemplate %}
    {% from 'icon/macro.njk' import bcIcon %}
    <div class="bc-step-indicator-container">
        <div data-module="bc-step-indicator" class="bc-step-indicator">
            <div class="bc-step-indicator__step complete">
                <div class="bc-step-indicator__step-number">
                    {{ bcIcon({
                        variant: 'check'
                    }) }}
                </div>
                <div class="bc-step-indicator__body">
                    <p>
                        <strong>Step 1</strong>
                    </p>
                    <p>Before you Start</p>
                </div>
            </div>
            <div class="bc-step-indicator__line complete"></div>
            <div class="bc-step-indicator__step complete">
                <div class="bc-step-indicator__step-number">
                    {{ bcIcon({
                        variant: 'check'
                    }) }}
                </div>
                <div class="bc-step-indicator__body">
                    <p>
                        <strong>Step 2</strong>
                    </p>
                    <p>Personal details</p>
                </div>
            </div>
            <div class="bc-step-indicator__line complete"></div>
            <div class="bc-step-indicator__step" aria-current="step">
                <div class="bc-step-indicator__step-number">3</div>
                <div class="bc-step-indicator__body">
                    <p>
                        <strong>Step 3</strong>
                    </p>
                    <p>Membership routes</p>
                </div>
            </div>
            <div class="bc-step-indicator__line"></div>
            <div class="bc-step-indicator__step">
                <div class="bc-step-indicator__step-number">4</div>
                <div class="bc-step-indicator__body">
                    <p>
                        <strong>Step 4</strong>
                    </p>
                    <p>Qualifications</p>
                </div>
            </div>
            <div class="bc-step-indicator__line"></div>
            <div class="bc-step-indicator__step">
                <div class="bc-step-indicator__step-number">5</div>
                <div class="bc-step-indicator__body">
                    <p>
                        <strong>Step 5</strong>
                    </p>
                    <p>Declaration</p>
                </div>
            </div>
            <div class="bc-step-indicator__line"></div>
            <div class="bc-step-indicator__step">
                <div class="bc-step-indicator__step-number">6</div>
                <div class="bc-step-indicator__body">
                    <p>
                        <strong>Step 6</strong>
                    </p>
                    <p>payment option</p>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block body %}
    <div class="ip-fellow-membership-application ip-fellow-membership-application__step-3">
        {% from "heading/macro.njk" import bcHeading %}
        {% from "form/macro.njk" import bcForm %}
        {% from "select/macro.njk" import bcSelect %}
        {% from "input/macro.njk" import bcInput %}
        {% from "button/macro.njk" import bcButton %}
        {% from "radios/macro.njk" import bcRadios %}
        {% from "choice-selector-card/macro.njk" import bcChoiceSelectorCard %}

        {{ bcHeading({
			hierarchy: 1,
			text: 'Fellow member application'
		}) }}
        {{ bcHeading({
			hierarchy: 2,
			text: 'Membership routes'
		}) }}
        {% call bcProse() %}
            <p>
                Select the membership route
            </p>
        {% endcall %}

        {% call bcForm({
			action: '',
			method: '',
			disableUnloadPrompt: true
		}) %}
            
            {{ bcChoiceSelectorCard({
                name: 'membershipRoutes',
                items: [
                    { 
                        label: 'Experience', 
                        hint: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',
                        value: 'experience'
                    },
                    { 
                        label: 'Qualification', 
                        hint: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',
                        value: 'qualification'
                    }
                ]
            }) }}
            <div id="group1">
                {{ bcRadios({
                    name: 'experienceRoute',
                    legend: {
                        text: 'Select the type of Fellow experience route'
                    },
                    required: true,
                    options: [
                        {
                            text: 'Arbitrators',
                            value: '1',
                            required: true
                        },
                        {
                            text: 'Mediators',
                            value: '2'
                        },
                        {
                            text: 'Adjudicators',
                            value: '3'
                        }
                    ]
                }) }}
            </div>

            <div id="group2">
                {{ bcRadios({
                    name: 'qualificationRoute',
                    legend: {
                        text: 'Select the type of qualification route'
                    },
                    required: true,
                    options: [
                        {
                            text: 'Qualification',
                            value: '1',
                            required: true
                        },
                        {
                            text: 'Recognised course provider',
                            value: '2'
                        }
                    ]
                }) }}
            </div>
            
            <div class="bc-button-group">
                {{ bcButton({
                    appearance: 'primary',
                    type: 'submit',
                    text: 'Continue'
                }) }}
                {{ bcButton({
                    appearance: 'secondary',
                    type: 'button',
                    text: 'Previous'
                }) }}
                {{ bcButton({
                    appearance: 'link',
                    type: 'button',
                    text: 'Cancel'
                }) }}
            </div>

        {% endcall %}

    </div>
{% endblock %}

{% block scripts %}
	<script>
		function toggleOptions() {	
            const $radios = document.querySelectorAll('input[type=radio][name="membershipRoutes"]');
            const $group1 = document.getElementById("group1");
            const $group2 = document.getElementById("group2");
            const selectedRadio = document.querySelector('input[type=radio][name="membershipRoutes"]:checked');


			$radios.forEach(radio => radio.addEventListener('change', () => 
                radio.value == 'qualification' ?
                    group2() :
                    group1()
                ));

            const group1 = () => {
                $group1.style.display = 'block';
                $group2.style.display = 'none';
			}

            const group2 = () => {
                $group1.style.display = 'none';
                $group2.style.display = 'block';
			}

            if(selectedRadio != null && selectedRadio.value == 'qualification') {
                group2();
            }
            if(selectedRadio != null && selectedRadio.value == 'experience') {
                group1();
            }
		}

		window.addEventListener("DOMContentLoaded", () => {
			toggleOptions();
		})
	</script>
{% endblock %}